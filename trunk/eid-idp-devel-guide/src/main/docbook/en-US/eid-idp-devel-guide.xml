<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC
        "-//OASIS//DTD DocBook XML V4.5//EN"
        "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<article lang="en">
    <articleinfo>
        <title>FedICT eID Identity Provider Developer's Guide</title>
        <subtitle>
            Integrating the eID Identity Provder within your web applications.
        </subtitle>
        <copyright>
            <year>2009-2010</year>
            <holder>FedICT</holder>
        </copyright>
        <releaseinfo>draft 28 Dec 2010</releaseinfo>
        <authorgroup>
            <author>
                <firstname>Wim</firstname>
                <surname>Vandenhaute</surname>
            </author>
        </authorgroup>
        <abstract>
            <para>
                This developer's guide serves as an entry point for integrating
                the eID Identity Provider in your web applications. The
                target audience are web developers and web application
                architects.
            </para>
        </abstract>
    </articleinfo>
    <section>
        <title>Introduction</title>
        <para>
            The FedICT eID Identity Provider (eID IdP) is an identity provider
            which makes us of the FedICT eID Applet for authenticating users.
            The main goal of the eID Identity Provider is to ease the
            integration
            of eID in web applications of a Service Provider. It makes use of
            the FedICT eID Trust Service for validation of the eID certificates.
        </para>
        <para>
            The FedICT eID Identity Provider is NOT an IAM solution. Following
            is out-of-scope:
            <itemizedlist>
                <listitem>
                    <para>
                        Delivery of attributes not present on the eID card.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Delivery of role-attributes or role-attribute
                        certificates.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Management of SSO domains.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Management of the lifecycle of a digital identity.
                    </para>
                </listitem>
            </itemizedlist>
        </para>
        <para>
            The eID Identity Provider also supports different protocols.
            The following sections will highlight the different supported
            protocols.
        </para>
    </section>
    <section>
        <title>SAML v2.0 Browser POST</title>
        <section>
            <title>Authentication Request</title>
            <para>
                The Service Provider (SP) web application sends the SAML v2.0
                authentication
                request Base64 encoded using an HTTP Post via the web browser
                of the client. The POST parameter used for that is
                <emphasis>SAMLRequest</emphasis>.
            </para>
            <para>
                Following is an example of such a SAML v2.0 authentication
                request:
                <programlisting role="XML">

                    <![CDATA[

<saml2p:AuthnRequest xmlns:saml2p="urn:oasis:names:tc:SAML:2.0:protocol"
    AssertionConsumerServiceURL="https://192.168.1.101:443/eid-idp-sp/saml2-landing"
    Destination="https://192.168.1.101:443/eid-idp/protocol/saml2"
    ForceAuthn="true"
    ID="authn-request-21b80327-7204-44ef-9e42-73633ae2e175"
    IssueInstant="1970-01-01T00:00:00.000Z"
    ProtocolBinding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST"
    Version="2.0">

    <saml2:Issuer xmlns:saml2="urn:oasis:names:tc:SAML:2.0:assertion">
        https://192.168.1.101:443/eid-idp-sp/saml2-landing
    </saml2:Issuer>

</saml2p:AuthnRequest>
                        ]]>
                </programlisting>
            </para>
            <section>
                <title>Java SDK</title>
                <para>
                    The FedICT eID Identity Provider Java SDK provides a servlet
                    which will generate and send out such a request.
                    The servlet takes 2 servlet init parameters:
                    <itemizedlist>
                        <listitem>
                            <para>
                                <code>IdPDestination</code>
                                The location of the FedICT eID IdP SAML v2.0
                                landing servlet.
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                <code>SPDestination</code>
                                The location of the Service Providers's SAML
                                v2.0
                                landing servlet, which will handle the incoming
                                authentication response.
                            </para>
                        </listitem>
                    </itemizedlist>
                </para>
                <para>
                    Following is a snippet of the
                    <code>web.xml</code>
                    for configuring the servlet.
                </para>
                <programlisting role="XML">

                    <![CDATA[
    <servlet>
        <servlet-name>SAML2AuthenticationRequestServlet</servlet-name>
        <servlet-class>
            be.fedict.eid.idp.sp.protocol.saml2.AuthenticationRequestServlet
        </servlet-class>
        <init-param>
            <param-name>IdPDestination</param-name>
            <param-value>https://eididp.host.be/eid-idp/protocol/saml2</param-value>
        </init-param>
        <init-param>
            <param-name>SPDestination</param-name>
            <param-value>https://sp.host.be/eid-idp-sp/saml2-landing</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>SAML2AuthenticationRequestServlet</servlet-name>
        <url-pattern>/saml-request</url-pattern>
    </servlet-mapping>

                         ]]>
                </programlisting>
            </section>
        </section>
        <section>
            <title>Authentication Response</title>
            <para>
                The FedICT Identity Provider will return a SAML v2.0
                authentication response Base64 encoded using an HTTP Post
                via the web browser of the client. The POST parameter used for
                that is<emphasis>SAMLResponse</emphasis>.
            </para>
            <para>
                Following is an example of such a SAML v2.0 authentication
                response:
                <programlisting role="XML">

                    <![CDATA[
<saml2p:Response xmlns:saml2p="urn:oasis:names:tc:SAML:2.0:protocol"
    Destination="https://192.168.1.101:443/eid-idp-sp/saml2-landing"
    ID="saml-response-eccaf61a-f8f1-4346-9c25-a83c1e8fa599"
    IssueInstant="2010-08-03T08:56:53.366Z"
    Version="2.0">

    <ds:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
        ...
    </ds:Signature>

    <saml2p:Status>
        <saml2p:StatusCode Value="urn:oasis:names:tc:SAML:2.0:status:Success" />
    </saml2p:Status>
    <saml2:Assertion xmlns:saml2="urn:oasis:names:tc:SAML:2.0:assertion"
        ID="assertion-765aec37-0788-4c3b-a6ca-88eb78a9890c"
        IssueInstant="2010-08-03T08:56:53.366Z"
        Version="2.0">

        <saml2:Issuer>http://www.e-contract.be/</saml2:Issuer>

        <saml2:Subject>
            <saml2:NameID>71715100070</saml2:NameID>
            <saml2:SubjectConfirmation Method="urn:oasis:names:tc:SAML:2.0:cm:bearer">
            <saml2:SubjectConfirmationData
                InResponseTo="authn-request-21b80327-7204-44ef-9e42-73633ae2e175"
                NotBefore="2010-08-03T08:56:53.366Z"
                NotOnOrAfter="2010-08-03T09:01:53.366Z"
                Recipient="https://192.168.1.101:443/eid-idp-sp/saml2-landing" />
            </saml2:SubjectConfirmation>
        </saml2:Subject>

        <saml2:Conditions
            NotBefore="2010-08-03T08:56:53.366Z"
            NotOnOrAfter="2010-08-03T09:01:53.366Z">
            <saml2:AudienceRestriction>
                <saml2:Audience>
                    https://192.168.1.101:443/eid-idp-sp/saml2-landing
                </saml2:Audience>
            </saml2:AudienceRestriction>
        </saml2:Conditions>

        <saml2:AuthnStatement AuthnInstant="2010-08-03T08:56:53.366Z">
            <saml2:AuthnContext />
        </saml2:AuthnStatement>

        <saml2:AttributeStatement>
            <saml2:Attribute Name="urn:be:fedict:eid:idp:name">
                <saml2:AttributeValue>
                    SPECIMEN
                </saml2:AttributeValue>
            </saml2:Attribute>
            <saml2:Attribute Name="urn:be:fedict:eid:idp:firstName">
                <saml2:AttributeValue>
                    Alice Geldigekaart2266
                </saml2:AttributeValue>
            </saml2:Attribute>
        </saml2:AttributeStatement>

    </saml2:Assertion>
</saml2p:Response>
                            ]]>
                </programlisting>
            </para>
            <section>
                <title>Java SDK</title>
                <para>
                    The FedICT eID Identity Provider Java SDK provides a servlet
                    which will handle the incoming SAML Authentication Response.
                    The servlet takes following servlet init parameters:
                    <itemizedlist>
                        <listitem>
                            <para>
                                <code>IdentifierSessionAttribute</code>
                                HTTP Session attribute on which the returned
                                subject identifier will be pushed after a
                                successfull authentication.
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                <code>AttributeMapSessionAttribute</code>
                                HTTP Session attribute on which a Map
                                containing the returned attributes will be
                                pushed after a successfull authentiaction.
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                <code>RedirectPage</code>
                                Page to redirect to after a successfull
                                authentication.
                            </para>
                        </listitem>
                    </itemizedlist>
                </para>
                <para>
                    This servlet will later be extended for support of all
                    attributes returned by the FedICT Identity Provider.
                    Following is a snippet of the
                    <code>web.xml</code>
                    for configuring the servlet.
                </para>
                <programlisting role="XML">

                    <![CDATA[
    <servlet>
        <servlet-name>SAML2AuthenticationResponseServlet</servlet-name>
        <servlet-class>
            be.fedict.eid.idp.sp.protocol.saml2.AuthenticationResponseServlet
        </servlet-class>
        <init-param>
            <param-name>IdentifierSessionAttribute</param-name>
            <param-value>Identifier</param-value>
        </init-param>
        <init-param>
            <param-name>RedirectPage</param-name>
            <param-value>/authn-result.jsp</param-value>
        </init-param>
        <init-param>
            <param-name>NameSessionAttribute</param-name>
            <param-value>Name</param-value>
        </init-param>
        <init-param>
            <param-name>FirstNameSessionAttribute</param-name>
            <param-value>FirstName</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>SAML2AuthenticationResponseServlet</servlet-name>
        <url-pattern>/saml2-landing</url-pattern>
    </servlet-mapping>

                        ]]>
                </programlisting>
            </section>
        </section>
        <section>
            <title>Future work</title>
            <para>
                In later releases support for the SAML v2.0 Artifact Profile
                will be
                added and a SAML v2.0 Metadata document will be available to
                publish
                the SAML v2.0 services.
            </para>
        </section>


    </section>
    <section>
        <title>OpenID v2.0</title>
        <para>
            OpenID support was added for seamless integration with popular web
            frameworks like Drupal. A dynamic YADIS identity document is used
            to start an OpenID authentication. The FedICT eID Identity Provider
            uses OP-driven selection. It supports OpenID Association and direct
            verification via the eID Idp OP Provider.
        </para>
        <para>
            The FedICT eID Identity Provider supports OpenID Attribute Exchange
            ( OpenID AX ) as part of the OpenID Authentication request.
            By default the name and firstname are returned. The SP can request
            other eID attributes explicitly.
        </para>
        <para>
            The FedICT eID Identity Provider supports OpenID Provider
            Authentication Policy Extension 1.0 ( OpenID PAPE ) for
            communicating the authentication policy between the eID IdP and the
            SP.
        </para>
        <section>
            <title>OpenID Protocol</title>
            <para>
                The OpenID URL delivers following file:
                <programlisting role="XML">
                    <![CDATA[
<HTML>
    <HEAD>
        <META http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
        <META content="https://localhost:48745/identity/xrds" http-equiv="X-XRDS-Location"/>
    </HEAD>

    <BODY>
        <P>OpenID Identity URL</P>
    </BODY>
</HTML>
                            ]]>
                </programlisting>
            </para>
            <para>
                Following, the OpenID Consumer will download the YADIS document,
                which contains:
                <programlisting role="XML">
                    <![CDATA[
<xrds:XRDS xmlns:xrds="xri://$xrds" xmlns="xri://$xrd*($v*2.0)">
    <XRD>
        <Service>
            <Type>http://specs.openid.net/auth/2.0/server</Type>
            <URI>https://localhost:48745/producer</URI>
        </Service>
        <Service>
            <Type>http://specs.openid.net/auth/2.0/signon</Type>
            <URI>https://localhost:48745/producer</URI>
        </Service>
    </XRD>
</xrds:XRDS>
                            ]]>
                </programlisting>
                The first
                <code>Service</code>
                element specifies where to contact
                the eID IdP for setting up an association key.
                All communication is done over unilateral SSL.
            </para>
            <para>
                The association request sent out using HTTP POST by the OpenID
                Consumer to the eID IdP contais:
                <programlisting role="XML">
                    <![CDATA[
openid.ns:http://specs.openid.net/auth/2.0
openid.mode:associate
openid.session_type:DH-SHA256
openid.assoc_type:HMAC-SHA256
openid.dh_consumer_public:...
                            ]]>
                </programlisting>
            </para>
            <para>
                The eID IdP reacts to this association request with following
                message:
                <programlisting role="XML">
                    <![CDATA[
openid.ns:http://specs.openid.net/auth/2.0
openid.session_type:DH-SHA256
openid.assoc_type:HMAC-SHA256
openid.assoc_handle:1273064471124-0
openid.expires_in:1799
openid.dh_server_public:...
openid.enc_mac_key:...
                            ]]>
                </programlisting>
            </para>
            <para>
                Now that the association is setup between the OpenID Consumer
                and the eID IdP the consumer is ready to send out its
                authentication request using a browser redirect with following
                arguments:
                <programlisting role="XML">
                    <![CDATA[
openid.ns.ext1:http://openid.net/srv/ax/1.0
openid.ext1.type.name:http://schema.openid.net/namePerson/first
openid.ns:http://specs.openid.net/auth/2.0
openid.identity:http://specs.openid.net/auth/2.0/identifier_select
openid.claimed_id:http://specs.openid.net/auth/2.0/identifier_select
openid.mode:checkid_setup
openid.ext1.mode:fetch_request
openid.ext1.required:name
openid.realm:https://localhost:48745/consumer
openid.assoc_handle:1273064471124-0
openid.return_to:https://localhost:48745/consumer
                            ]]>
                </programlisting>
                The consumer makes the eID IdP select the identifiers, which is
                specified using the
                <code>openid.identity</code>
                and
                <code>openid.claimed_id</code>
                parameters. The example also shows how an attribute is requested
                as part of the authentication request.
            </para>
            <para>
                The eID IdP will, after handling the authentication
                request,direct
                the user via the browser to the eID Applet to authenticate
                himself.
                After this a response redirect will be sent back to the OpenID
                Consumer containing following arguments:
                <programlisting role="XML">
                    <![CDATA[
openid.op_endpoint:https://localhost:48745/producer
openid.signed:op_endpoint,claimed_id,identity,return_to,response_nonce,
    assoc_handle,ns.ext1,ns.ext2,ext1.mode,ext1.type.name,ext1.value.name,
    ext2.auth_policies
openid.ns.ext1:http://openid.net/srv/ax/1.0
openid.ext1.type.name:http://schema.openid.net/namePerson/first
openid.sig:eCG4ER1zAzuGOdDd+MuxOI1bjQImsfaPO+e/S5gACOk=
openid.ns.ext2:http://specs.openid.net/extensions/pape/1.0
openid.response_nonce:2010-05-05T13:01:11Z0
openid.claimed_id:https://localhost:48745/identity/idp/123456789
openid.assoc_handle:1273064471124-0
openid.ns:http://specs.openid.net/auth/2.0
openid.ext1.value.name:sample-first-name
openid.ext2.auth_policies:http://schemas.openid.net/pape/policies/2007/06/multi-factor-physical
openid.identity:https://localhost:48745/identity/idp/123456789
openid.ext1.mode:fetch_response
openid.mode:id_res
openid.return_to:https://localhost:48745/consumer
                            ]]>
                </programlisting>
                Notice that also the attribute and PAPE extension are signed by
                the eID IdP with the key agreed on during the association stage.
            </para>
            <para>
                Finally, the OpenID Consumer will contact the eID IdP once more
                to validate if the OP selected identifier is allowed by the eID
                IdP. This is done via the second
                <code>Service</code>
                element in the YADIS document.
            </para>
        </section>
        <section>
            <title>Java SDK</title>
            <section>
                <title>Authentication Request</title>
                <para>
                    The FedICT eID Identity Provider Java SDK provides a
                    servlet which will generate and send out such a request.
                    This servlet is also responsible for reading out the
                    YADIS document and setting up an association.
                    The servlet takes following servlet init parameters:
                    <itemizedlist>
                        <listitem>
                            <para>
                                <code>SPDestination</code>
                                The location of the Service Providers's
                                OpenID landing servlet, which will handle
                                the returned authentication response.
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                <code>UserIdentifier</code>
                                The location of the eID IdP path publishing
                                the location of its YADIS document.
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                <code>TrustServer</code>
                                Optional boolean parameter specifying
                                whether all SSL server certificates can be
                                trusted.
                            </para>
                        </listitem>
                    </itemizedlist>
                </para>
                <para>
                    This servlet will later be extended for support of
                    requesting specific eID attributes. Following is a
                    snippet of the
                    <code>web.xml</code>
                    for configuring the servlet.
                </para>
                <programlisting role="XML">

                    <![CDATA[
    <servlet>
        <servlet-name>OpenIDAuthenticationRequestServlet</servlet-name>
        <servlet-class>
            be.fedict.eid.idp.sp.protocol.openid.AuthenticationRequestServlet
        </servlet-class>
        <init-param>
            <param-name>UserIdentifier</param-name>
            <param-value>https://eididp.host.be/eid-idp/endpoints/openid-identity</param-value>
        </init-param>
        <init-param>
            <param-name>SPDestination</param-name>
            <param-value>https://sp.host.be/eid-idp-sp/openid-landing</param-value>
        </init-param>
        <init-param>
            <param-name>TrustServer</param-name>
            <param-value>true</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>OpenIDAuthenticationRequestServlet</servlet-name>
        <url-pattern>/openid-request</url-pattern>
    </servlet-mapping>
                            ]]>
                </programlisting>
            </section>
            <section>
                <title>Authentication Response</title>
                <para>
                    The FedICT eID Identity Provider Java SDK provides a
                    servlet which will handle the returned OpenID
                    authentication response.
                    The servlet takes following servlet init parameters:
                    <itemizedlist>
                        <listitem>
                            <para>
                                <code>IdentifierSessionAttribute</code>
                                HTTP Session attribute on which the returned
                                subject identifier will be pushed after a
                                successfull authentication.
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                <code>NameSessionAttribute</code>
                                HTTP Session attribute on which the returned
                                subject's name will be pushed after a
                                successfull authentication.
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                <code>FirstNameSessionAttribute</code>
                                HTTP Session attribute on which the returned
                                subject's first name will be pushed after a
                                successfull authentication.
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                <code>RedirectPage</code>
                                Page to redirect to after a successfull
                                authentication.
                            </para>
                        </listitem>
                    </itemizedlist>
                </para>
                <para>
                    This servlet will later be extended for support of
                    OpenID AX for requesting specific eID attributes.
                    Following is a snippet of the
                    <code>web.xml</code>
                    for configuring the servlet.
                </para>
                <programlisting role="XML">

                    <![CDATA[
    <servlet>
        <servlet-name>OpenIDAuthenticationResponseServlet</servlet-name>
        <servlet-class>
            be.fedict.eid.idp.sp.protocol.openid.AuthenticationResponseServlet
        </servlet-class>
        <init-param>
            <param-name>IdentifierSessionAttribute</param-name>
            <param-value>Identifier</param-value>
        </init-param>
        <init-param>
            <param-name>RedirectPage</param-name>
            <param-value>/openid-result.jsp</param-value>
        </init-param>
        <init-param>
            <param-name>NameSessionAttribute</param-name>
            <param-value>Name</param-value>
        </init-param>
        <init-param>
            <param-name>FirstNameSessionAttribute</param-name>
            <param-value>FirstName</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>OpenIDAuthenticationResponseServlet</servlet-name>
        <url-pattern>/openid-landing</url-pattern>
    </servlet-mapping>
                            ]]>
                </programlisting>
            </section>
        </section>
    </section>
    <section>
        <title>WS-Federation v1.1</title>
        <para>
            Support is added for the Web (Passive) Requestors model of
            WS-Federation v1.1. This support provides a seamless integration
            with ASP.NET applications using the Windows Identity Foundation.
        </para>
        <section>
            <title>Metadata</title>
            <para>
                The FedICT eID IdP discovery for WS-Federation makes use of a
                metadata document as described in OASIS SAML v2.0 Metadata.
                Following is an example of such document:
                <programlisting role="XML">

                    <![CDATA[
<md:EntityDescriptor
    xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata"
    xmlns:auth="http://docs.oasis-open.org/wsfed/authorization/200706"
    xmlns:ds="http://www.w3.org/2000/09/xmldsig#"
    xmlns:fed="http://docs.oasis-open.org/wsfed/federation/200706"
    xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion"
    xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702"
    xmlns:wsa="http://www.w3.org/2005/08/addressing"
    xmlns:xenc="http://www.w3.org/2001/04/xmlenc#"

    ID="saml-metadata-d1ea2940-3032-4e7a-8093-c131ca7bab00"
    entityID="https://127.0.0.1:54705/eid-idp/protocol/ws-federation">

    <ds:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
        ...
    </ds:Signature>

    <md:RoleDescriptor
        protocolSupportEnumeration="http://docs.oasis-open.org/wsfed/federation/200706"
        xsi:type="fed:SecurityTokenServiceType">

        <md:KeyDescriptor use="signing">
            <ds:KeyInfo>
                <ds:X509Data>
                    ...
                </ds:X509Data>
            </ds:KeyInfo>
        </md:KeyDescriptor>

        <fed:ClaimTypesOffered>
            <auth:ClaimType
                Optional="true"
                Uri="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name">

                <auth:DisplayName>Name</auth:DisplayName>
                <auth:Description>The name of the Subject.</auth:Description>
            </auth:ClaimType>

            <auth:ClaimType
                Optional="true"
                Uri="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname">

                <auth:DisplayName>FirstName</auth:DisplayName>
                <auth:Description>Preferred name or first name of a Subject.</auth:Description>
            </auth:ClaimType>

            <auth:ClaimType
                Optional="true"
                Uri="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname">

                <auth:DisplayName>LastName</auth:DisplayName>
                <auth:Description>Surname or family name of a Subject.</auth:Description>
            </auth:ClaimType>

            <auth:ClaimType
                Optional="true"
                Uri="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/streetaddress">

                <auth:DisplayName>StreetAddress</auth:DisplayName>
                <auth:Description>...</auth:Description>
            </auth:ClaimType>

            <auth:ClaimType
                Optional="true"
                Uri="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/locality">

                <auth:DisplayName>Locality</auth:DisplayName>
                <auth:Description>...</auth:Description>
            </auth:ClaimType>

            <auth:ClaimType
                Optional="true"
                Uri="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/postalcode">

                <auth:DisplayName>PostalCode</auth:DisplayName>
                <auth:Description>...</auth:Description>
            </auth:ClaimType>

            <auth:ClaimType
                Optional="true"
                Uri="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/country">

                <auth:DisplayName>Country</auth:DisplayName>
                <auth:Description>...</auth:Description>
            </auth:ClaimType>

            <auth:ClaimType
                Optional="true"
                Uri="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/dateofbirth">

                <auth:DisplayName>DateOfBirth</auth:DisplayName>
                <auth:Description>...</auth:Description>
            </auth:ClaimType>

            <auth:ClaimType
                Optional="true"
                Uri="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/gender">

                <auth:DisplayName>Gender</auth:DisplayName>
                <auth:Description>...</auth:Description>
            </auth:ClaimType>

            <auth:ClaimType
                Optional="true"
                Uri="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/privatepersonalidentifier">

                <auth:DisplayName>PPID</auth:DisplayName>
                <auth:Description>...</auth:Description>
            </auth:ClaimType>

        </fed:ClaimTypesOffered>

        <fed:PassiveRequestorEndpoint>
            <wsa:EndpointReference>
                <wsa:Address>
                    https://127.0.0.1:54705/eid-idp/protocol/ws-federation
                </wsa:Address>
            </wsa:EndpointReference>
        </fed:PassiveRequestorEndpoint>

    </md:RoleDescriptor>
</md:EntityDescriptor>

                            ]]>
                </programlisting>
                Important are the location of the WS-Federation Passive
                Requestor's endpoint and the listing of available claim types by
                the eID IdP.
                It also contains the digital identity of the eID IdP and an
                indication of the key used to sign the authentication response
                tokens.
            </para>
        </section>
        <section>
            <title>
                Authentication Response
            </title>
            <para>
                Below is an example of the WS-Trust Response message after a
                successfull eID Authentication. A SAML v2.0 Assertion is
                delivered as token by the eID IdP.
                <programlisting role="XML">

                    <![CDATA[
<trust:RequestSecurityTokenResponseCollection
    xmlns:trust="http://docs.oasis-open.org/ws-sx/ws-trust/200512"
    xmlns:ds="http://www.w3.org/2000/09/xmldsig#"
    xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion"
    xmlns:wsa="http://www.w3.org/2005/08/addressing"
    xmlns:xenc="http://www.w3.org/2001/04/xmlenc#">

    <trust:RequestSecurityTokenResponse Context="some-context-identifier">

        <trust:TokenType>urn:oasis:names:tc:SAML:2.0:assertion</trust:TokenType>

        <trust:RequestType>
            http://docs.oasis-open.org/ws-sx/ws-trust/200512/Issue
        </trust:RequestType>

        <trust:KeyType>
            http://docs.oasis-open.org/ws-sx/ws-trust/200512/Bearer
        </trust:KeyType>

        <trust:RequestedSecurityToken>
            <saml:Assertion
                ID="saml-8eb46c40-c2d9-4c42-abc0-dcc9cbf425c1"
                IssueInstant="2010-05-05T14:51:03.324+02:00"
                Version="2.0">

                <saml:Issuer>CN=Test</saml:Issuer>

                <ds:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
                    ...
                </ds:Signature>

                <saml:Subject>
                    <saml:NameID>test-auth-identifier</saml:NameID>
                    <saml:SubjectConfirmation
                        Method="urn:oasis:names:tc:SAML:2.0:cm:bearer"/>
                </saml:Subject>

                <saml:Conditions
                    NotBefore="2010-05-05T14:51:03.324+02:00"
                    NotOnOrAfter="2010-05-05T15:51:03.324+02:00">
                    <saml:AudienceRestriction>
                        <saml:Audience>http://return.to.here</saml:Audience>
                    </saml:AudienceRestriction>
                </saml:Conditions>

                <saml:AttributeStatement>

                    <saml:Attribute
                        Name="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname">

                        <saml:AttributeValue xsi:type="xs:string">
                            test-first-name
                        </saml:AttributeValue>
                    </saml:Attribute>

                    ...
                </saml:AttributeStatement>
            </saml:Assertion>
        </trust:RequestedSecurityToken>
    </trust:RequestSecurityTokenResponse>
</trust:RequestSecurityTokenResponseCollection>
                            ]]>
                </programlisting>
            </para>
        </section>
    </section>
    <appendix>
        <title>eID Identity Provider Developer's Guide License</title>
        <para>
            <mediaobject>
                <imageobject>
                    <imagedata format="PNG" fileref="cc.logo.large.png"
                               scale="100"/>
                </imageobject>
            </mediaobject>
            This document has been released under the Creative Commons license.
            <mediaobject>
                <imageobject>
                    <imagedata format="PNG" fileref="share.large.png"
                               scale="20"/>
                </imageobject>
            </mediaobject>
            You are free to Share — to copy, distribute and transmit the work.
            <mediaobject>
                <imageobject>
                    <imagedata format="PNG" fileref="by.large.png" scale="20"/>
                </imageobject>
            </mediaobject>
            You must attribute the work in the manner specified by the author or
            licensor (but not in any way that suggests that they endorse you or
            your use of the work).
            <mediaobject>
                <imageobject>
                    <imagedata format="PNG" fileref="nc.large.png" scale="20"/>
                </imageobject>
            </mediaobject>
            You may not use this work for commercial purposes.
            <mediaobject>
                <imageobject>
                    <imagedata format="PNG" fileref="nd.large.png" scale="20"/>
                </imageobject>
            </mediaobject>
            You may not alter, transform, or build upon this work.
        </para>
        <para>
            More information about the Creative Commons license conditions can
            be
            found at
            <ulink url="http://creativecommons.org/">Creative Commons
                organization
            </ulink>
            .
        </para>
    </appendix>
    <appendix>
        <title>eID Identity Provider License</title>
        <para>
            The eID Identity Provider source code has been released
            under the GNU LGPL version 3.0.
        </para>
        <para>
            <code>
                This is free software; you can redistribute it and/or modify it
                under the terms of the GNU Lesser General Public License version
                3.0
                as published by the Free Software Foundation.
            </code>
        </para>
        <para>
            <code>
                This software is distributed in the hope that it will be
                useful, but WITHOUT ANY WARRANTY; without even the implied
                warranty
                of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
                GNU
                Lesser General Public License for more details.
            </code>
        </para>
        <para>
            <code>
                You should have received a copy of the GNU Lesser General
                Public License along with this software; if not, see
                http://www.gnu.org/licenses/.
            </code>
        </para>
    </appendix>
    <appendix>
        <title>Revision history</title>
        <table>
            <title>Revision history</title>
            <tgroup cols="3">
                <colspec colwidth="1*"/>
                <colspec colwidth="1*"/>
                <colspec colwidth="2*"/>
                <thead>
                    <row>
                        <entry>Date</entry>
                        <entry>Author</entry>
                        <entry>Description</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>28 Dec 2010</entry>
                        <entry>Wim Vandenhaute</entry>
                        <entry>Initial version.</entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
    </appendix>
</article>